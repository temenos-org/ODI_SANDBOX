<?xml version="1.0" encoding="UTF-8"?>
<SunopsisExport>
<Admin RepositoryVersion="05.02.02.05" IsLegacyIdCompatible="false" />
<Encryption algorithm="AES" keyLength="128" exportKeyHash="" keyVect="PWPDZclZiP0W7DxLsrOXPg==" exportKeySalt="6889f346-0951-4d5d-8047-63bbd2f4e0de" containsCipherText="false"/>
<Object class="com.sunopsis.dwg.dbobj.SnpKmTemplate">
		<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2017-02-13 14:47:22.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUNOPSIS_INSTALL]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[fa46e03c-2d00-11e6-93f9-00163e1ffd72]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="IndIsSeeded" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="IndLangTrans" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="IndReplNl" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="IntVersion" type="com.sunopsis.sql.DbInt"><![CDATA[1]]></Field>
	<Field name="IKmTemplate" type="com.sunopsis.sql.DbInt"><![CDATA[84]]></Field>
	<Field name="LangName" type="java.lang.String"><![CDATA[PYTHON]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2017-02-13 14:47:22.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUNOPSIS_INSTALL]]></Field>
	<Field name="Name" type="java.lang.String"><![CDATA[SparkScript]]></Field>
	<Field name="TechnoName" type="java.lang.String"><![CDATA[SPARK_PYTHON]]></Field>
	<Field name="TemplateText" type="java.lang.String"><![CDATA[OdiOutFile -FILE=$[WORK_DIR]/$[MAPPING_NAME_LONG].py -CHARSET_ENCODING=UTF-8
# -*- coding: utf-8 -*-
############################################################
# Spark Python Script Generated by Oracle Data Integrator
# $[MAPPING_NAME_LONG].py
############################################################
#
from pyspark import SparkContext, SparkConf, StorageLevel
from pyspark.sql import *
from pyspark_ext import *
from pyspark.sql.types import *
from py4j.java_gateway import java_import
#
############################################################
# Initialization / Control
############################################################
appName = "$[MAPPING_NAME_LONG]"
config = SparkConf().setAppName(appName)
props = []
<$
    // The following properties have no meaning in case of batch mode and therefore are excluded from Python script
    streaming_props = new java.util.HashMap();
    streaming_props.put( "spark.checkpointing", "");
    streaming_props.put( "spark.checkpointingInterval", "");
    streaming_props.put( "spark.rememberDuration", "");
    streaming_props.put( "spark.checkpointingBaseDir", "");
    streaming_props.put( "spark.batchDuration", "");
    streaming_props.put( "spark.restartFromCheckpoint", "");
    streaming_props.put( "spark.streaming.timeout", "");
    isStreaming = $[STREAMING_MODE];

    ekm_options     = new java.util.HashMap();
    {# FOR ($[SPARK_PROPS_FROM_EKM_OPTIONS__NAMES],$[SPARK_PROPS_FROM_EKM_OPTIONS__VALUES]) IN ($[NAME],$[VALUE]) SEP = '' #}ekm_options.put("$[NAME]", "$[VALUE]");
    {# ENDFOR #}
    spark_ds_props  = odiRef.getDataServerPropertiesFromLSchema("$[SPARK_SCHEMA]");
    spark_props_str = "";
    // Insert any props from EKM option settings
    for ( Map.Entry p : ekm_options.entrySet() ) {
      key = p.getKey();
      value = ekm_options.get(key);
      if (isStreaming || !streaming_props.containsKey(key))
        spark_props_str = spark_props_str + "props.append((" + odiRef.getQuotedString(key) + ", " + odiRef.getQuotedString(value) + "))" + (char)10;
    }
    // Insert any other Spark properties from Spark DataServer
    for ( Map.Entry p : spark_ds_props.entrySet() ) {
      key = p.getKey();
      if (!key.startsWith("$[SPARK_PROPERTY_PREFIX]")) continue;
      if (ekm_options.containsKey( key )) continue;
      value = p.getValue();
      if (isStreaming || !streaming_props.containsKey(key))
        spark_props_str = spark_props_str + "props.append((" + odiRef.getQuotedString(p.getKey()) + ", " + odiRef.getQuotedString(value) + "))" + (char)10;
    }
$><$=spark_props_str
$>{# IF ($[STREAMING_MODE] == 'true') 
#}props.append(("spark.checkpoint.id", "$[CURRENT_CHECKPOINT_ID]"))
{# ENDIF 
#}config = config.setAll(props)
sc = SparkContext(conf = config)
sqlContext = SQLContext(sc)
hiveCtx = HiveContext(sc)
sparkVersion = sparkVersionNum(sc.version)
{# IF ($[STREAMING_MODE] == 'true') #}
{# INCLUDE = 'defineRunApplicationFunc' #}
{# INCLUDE = 'SparkStreamingListenerIfNeeded_createDef' #}
{# INCLUDE = 'SparkStreamingContextGetOrCreate' #}
{# ENDIF #}
#
# Begin of Script
print
print( "Spark Python Script Generated by Oracle Data Integrator" )<? 
/* Note: do not remove "+" below. This protects the stdout/err parsing to recognize e.g. Python syntax errors falsely as Spark runtime output */ ?>
print( "ODI-SPARK-"+"APPNAME:"+       config.get( "spark.app.name" ))
print( "ODI-SPARK-"+"APPID:"+         sc.applicationId if sparkVersion >= 160 else '')
print( "ODI-SPARK-"+"VERSION:"+       sc.version)
print( "ODI-SPARK-SHORT-"+"VERSION:"+ str(sparkVersion))    
print
#
############################################################
# Begin of Mapping Logic
############################################################
{# LIST #}#{#NL#}# [$[commands.foreach(toString())]]
$[commands.foreach(getText())]{#SEP#}{#NL#}{# ENDLIST #}
#
############################################################
# End of Mapping Logic
############################################################
{# IF ($[STREAMING_MODE] == 'true') #}
{# INCLUDE = 'SparkStartStreamingCmdWithComments' #}
{# ENDIF #}
{# INCLUDE = 'SparkEndOfScript' #}
]]></Field>
	<Field name="TemplateVersion" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpKmTemplateJoin">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[ed33b265-127f-4635-920e-2ca3dd9aaa03]]></Field>
	<Field name="ISnpKmTemplate" type="com.sunopsis.sql.DbInt"><![CDATA[84]]></Field>
	<Field name="ISnpTrt" type="com.sunopsis.sql.DbInt"><![CDATA[116]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TRT.116]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[1986feab-eca2-4f5a-96a8-ecf827ac7cda]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[LKM Spark to File]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_TRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[17]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_KMTEMPLATE.84]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[fa46e03c-2d00-11e6-93f9-00163e1ffd72]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[SparkScript]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_KMTEMPLATE]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[11]]></Field>
</Object>
<Object class="com.sunopsis.dwg.DwgExportSummary">
		<Field name="ExpTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="InstObjNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="JoinColNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="JoinNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="KeyColNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="KeyNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="LinkDiagNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="MorigTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="MtxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="OrigTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="OtherObjectsNb" type="com.sunopsis.sql.DbInt"><![CDATA[2]]></Field>
	<Field name="PlanAgentNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="StepNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="TxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="UeOrigNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="UeUsedNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="VarPlanAgentNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="ScenTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="OdiVersion" type="java.lang.String"><![CDATA[12.2.1]]></Field>
	<Field name="OriginRepositoryID" type="com.sunopsis.sql.DbInt"><![CDATA[1]]></Field>
	<Field name="RepositoryVersion" type="java.lang.String"><![CDATA[05.02.02.05]]></Field>
</Object>
</SunopsisExport>
